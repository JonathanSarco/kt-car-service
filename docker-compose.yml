version: "2"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "CAR_BROKE_DOWN:1:1, REPAIR_SHOP_RECEIVED_CAR:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: kafka:9093
#      JVM_OPTS: "-Xms32M -Xmx64M"
#      SERVER_SERVLET_CONTEXTPATH: "/"
#    depends_on:
#      - kafka

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_car
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  postgres-init:
    image: postgres:13
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGPASSWORD=postgres
    volumes:
      - ./db-initialization/init_db.sh:/init_db.sh
      - ./db-initialization/schema.sql:/schema.sql
      - ./db-initialization/db_vehicles.csv:/db_vehicles.csv
    command: bash -c "sleep 10 && chmod u+x /init_db.sh && /init_db.sh"
