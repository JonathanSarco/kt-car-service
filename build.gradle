plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.6.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.6.21"
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.21'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-hibernate-orm-panache-kotlin'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-resteasy-reactive-kotlin-serialization'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation("io.quarkus:quarkus-hibernate-orm-panache")
    implementation("io.quarkus:quarkus-jdbc-postgresql")

    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive'

    implementation('org.apache.kafka:kafka-clients:3.2.1')
    implementation('org.apache.kafka:kafka-streams:3.2.1')

    // GSON
    implementation("com.google.code.gson:gson:2.9.0")
    implementation('com.google.guava:guava:31.1-jre')

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

}

group 'nl.lunatech'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}